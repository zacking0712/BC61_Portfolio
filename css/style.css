* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

/* HEADER */

.navbar .nav-item {
  position: relative;
}

.navbar .nav-item:hover a {
  color: #35a22c !important;
}

.navbar .nav-item::before {
  content: "";
  position: absolute;
  display: block;
  background-color: #35a22c;
  width: 0;
  height: 3px;
  left: 0;
  bottom: 0;
  transition: all 0.5s;
}

.navbar .nav-item:hover::before {
  width: 100%;
}

header .navbar-nav .active a {
  color: #35a22c !important;
}

header .navbar-nav .active::before {
  width: 100%;
}

/* CAROUSEL */

.carousel .carousel-item {
  position: relative;
}

.carousel .carousel-item .carousel_content {
  /* position: absolute;
    transform: translate(-50%, -50%);
    left: 50%;
    top: 50%; */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  text-align: center;
  color: #fff;
  background-color: rgb(39 43 54 / 50%);
}

.carousel .carousel-item .carousel_content img {
  width: 140px;
  border-radius: 50%;
}

.carousel .carousel-item .carousel_content h2 {
  font-size: 56px;
}

.carousel .carousel-item .carousel_content p {
  font-size: 24px;
}

/* PROEJECT */

.project .content .nav-item .active {
  background-color: #35a22c;
  color: white !important;
  border: #35a22c !important;
}

.project .tab-content .project_item .project_text {
  /* trước khi hover sẽ tạo một border  và dùng transparent để có một border ẩn đi */
  border: 1px solid transparent;
  border-radius: 0 0 16px 16px;
  border-top: none;
  transition: all 0.8s;
}

.project .tab-content .project_item:hover .project_text {
  /* khi hover thay đổi màu border để có thể nhận thuộc tính trasition vì transition chỉ làm chậm hiệu ứng chuyển đổi không làm chậm việc tạo ra  */
  border-color: #35a22c;
}

.project .tab-content .project_item:hover .project_text h3 {
  color: #35a22c;
}

.project .tab-content .project_item .project_text h3 {
  font-size: 20px;
}

/* AVAILABLE */

.available {
  position: relative;
  background-image: url("../image/3.jpg");
  background-attachment: fixed;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}

.available::before {
  content: "";
  background-color: rgb(7 10 12 / 72%);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.available .available_item {
  background: rgba(255, 255, 255, 0.15);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  border-radius: 10px;
  border: 1px solid rgba(255, 255, 255, 0.18);
  transition: all 0.8s;
}

.available .available_item:hover {
  background-color: black;
  border-color: white;
}

/* REPONSIVE */

/* Mobile < 576px */
/* sử dụng @media screen để reponsive cho các thiết bị khác */
/* có 2 loại giá trị sử dụng đó là max-width và min-width */
/* max-width thường dành cho việc xử lí các giao diện hiển thị trên các thiết bị nhỏ hơn khi đã có giao diện trên màn hình lớn hơn */
/* max-width có nghĩa là từ 0 tới mức giá trị đó */
/* max-width khi reponsive thì đi từ vùng màn hình lớn tới nhỏ hơn */

@media screen and (max-width: 576px) {
  .project .tab-pane .row {
    width: 100%;
    margin: 0 auto;
  }

  .available .available_item {
    margin-bottom: 20px;
  }
}

/* min-width dành cho các trường hợp mobile first nghĩa là xây dựng giao diện mobile trước */
/* min-width có nghĩa là từ giá trị đó đến dương vô cực */
/* Lưu ý: khi dùng min-width sẽ reponsive cho các vùng từ nhỏ tới lớn, các giá trị màn hình lớn hơn sẽ nằm dưới */

@media screen and (min-width: 576px) {
  .carousel .carousel-item h2 {
    color: orange;
  }
}


@media screen and (min-width: 992px) {
  .carousel .carousel-item h2 {
    color: red;
  }
}